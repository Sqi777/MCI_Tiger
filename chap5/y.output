State 2 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | lvalue ASSIGN exp
    4    | INT
    5    | STRING
    6    | NIL
    7    | LPAREN RPAREN
    8    | LPAREN expseq RPAREN
    9    | MINUS exp
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | exp EQ exp
   15    | exp NEQ exp
   16    | exp LT exp
   17    | exp LE exp
   18    | exp GT exp
   19    | exp GE exp
   20    | exp AND exp
   21    | exp OR exp
   22    | funcall
   23    | ID LBRACK exp RBRACK OF exp
   24    | ID LBRACE RBRACE
   25    | ID LBRACE asseq RBRACE
   26    | IF exp THEN exp
   27    | IF exp THEN exp ELSE exp
   28    | WHILE exp DO exp
   29    | FOR ID ASSIGN exp TO exp DO exp
   30    | BREAK
   31    | LET decs IN END
   32    | LET decs IN expseq END
   33    | LPAREN error RPAREN
   34    | error SEMICOLON exp

   35 lvalue: ID
   36       | lvalue DOT ID
   37       | lvalue LBRACK exp RBRACK
   38       | ID LBRACK exp RBRACK

   39 expseq: exp
   40       | exp SEMICOLON expseq

   41 funcall: ID LPAREN RPAREN
   42        | ID LPAREN paraseq RPAREN

   43 paraseq: exp
   44        | exp COMMA paraseq

   45 asseq: ID EQ exp
   46      | ID EQ exp COMMA asseq

   47 decs: dec decs
   48     | /* empty */

   49 dec: tydecs
   50    | vardec
   51    | fundecs

   52 tydecs: tydec
   53       | tydec tydecs

   54 tydec: TYPE ID EQ ty

   55 ty: ID
   56   | LBRACE tyfields RBRACE
   57   | ARRAY OF ID

   58 tyfields: tyfield
   59         | /* empty */

   60 tyfield: ID COLON ID
   61        | ID COLON ID COMMA tyfield

   62 vardec: VAR ID ASSIGN exp
   63       | VAR ID COLON ID ASSIGN exp

   64 fundecs: fundec
   65        | fundec fundecs

   66 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   67       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256) 33 34
ID (258) 23 24 25 29 35 36 38 41 42 45 46 54 55 57 60 61 62 63 66 67
STRING (259) 5
INT (260) 4
COMMA (261) 44 46 61
COLON (262) 60 61 63 67
SEMICOLON (263) 34 40
LPAREN (264) 7 8 33 41 42 66 67
RPAREN (265) 7 8 33 41 42 66 67
LBRACK (266) 23 37 38
RBRACK (267) 23 37 38
LBRACE (268) 24 25 56
RBRACE (269) 24 25 56
DOT (270) 36
PLUS (271) 10
MINUS (272) 9 11
TIMES (273) 12
DIVIDE (274) 13
EQ (275) 14 45 46 54 66 67
NEQ (276) 15
LT (277) 16
LE (278) 17
GT (279) 18
GE (280) 19
AND (281) 20
OR (282) 21
ASSIGN (283) 3 29 62 63
ARRAY (284) 57
IF (285) 26 27
THEN (286) 26 27
ELSE (287) 27
WHILE (288) 28
FOR (289) 29
TO (290) 29
DO (291) 28 29
LET (292) 31 32
IN (293) 31 32
END (294) 31 32
OF (295) 23 57
BREAK (296) 30
NIL (297) 6
FUNCTION (298) 66 67
VAR (299) 62 63
TYPE (300) 54
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33 34, on right: 1 3 9 10 11 12 13
    14 15 16 17 18 19 20 21 23 26 27 28 29 34 37 38 39 40 43 44 45
    46 62 63 66 67
lvalue (50)
    on left: 35 36 37 38, on right: 2 3 36 37
expseq (51)
    on left: 39 40, on right: 8 32 40
funcall (52)
    on left: 41 42, on right: 22
paraseq (53)
    on left: 43 44, on right: 42 44
asseq (54)
    on left: 45 46, on right: 25 46
decs (55)
    on left: 47 48, on right: 31 32 47
dec (56)
    on left: 49 50 51, on right: 47
tydecs (57)
    on left: 52 53, on right: 49 53
tydec (58)
    on left: 54, on right: 52 53
ty (59)
    on left: 55 56 57, on right: 54
tyfields (60)
    on left: 58 59, on right: 56 66 67
tyfield (61)
    on left: 60 61, on right: 58 61
vardec (62)
    on left: 62 63, on right: 50
fundecs (63)
    on left: 64 65, on right: 51 65
fundec (64)
    on left: 66 67, on right: 64 65


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program  go to state 13
    exp      go to state 14
    lvalue   go to state 15
    funcall  go to state 16


state 1

   34 exp: error . SEMICOLON exp

    SEMICOLON  shift, and go to state 17


state 2

   23 exp: ID . LBRACK exp RBRACK OF exp
   24    | ID . LBRACE RBRACE
   25    | ID . LBRACE asseq RBRACE
   35 lvalue: ID .
   38       | ID . LBRACK exp RBRACK
   41 funcall: ID . LPAREN RPAREN
   42        | ID . LPAREN paraseq RPAREN

    LPAREN  shift, and go to state 18
    LBRACK  shift, and go to state 19
    LBRACE  shift, and go to state 20

    LBRACK    [reduce using rule 35 (lvalue)]
    $default  reduce using rule 35 (lvalue)


state 3

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


state 4

    4 exp: INT .

    $default  reduce using rule 4 (exp)


state 5

    7 exp: LPAREN . RPAREN
    8    | LPAREN . expseq RPAREN
   33    | LPAREN . error RPAREN

    error   shift, and go to state 21
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 22
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 23
    lvalue   go to state 15
    expseq   go to state 24
    funcall  go to state 16


state 6

    9 exp: MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 25
    lvalue   go to state 15
    funcall  go to state 16


state 7

   26 exp: IF . exp THEN exp
   27    | IF . exp THEN exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 26
    lvalue   go to state 15
    funcall  go to state 16


state 8

   28 exp: WHILE . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 27
    lvalue   go to state 15
    funcall  go to state 16


state 9

   29 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 28


state 10

   31 exp: LET . decs IN END
   32    | LET . decs IN expseq END

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    $default  reduce using rule 48 (decs)

    decs     go to state 32
    dec      go to state 33
    tydecs   go to state 34
    tydec    go to state 35
    vardec   go to state 36
    fundecs  go to state 37
    fundec   go to state 38


state 11

   30 exp: BREAK .

    $default  reduce using rule 30 (exp)


state 12

    6 exp: NIL .

    $default  reduce using rule 6 (exp)


state 13

    0 $accept: program . $end

    $end  shift, and go to state 39


state 14

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 1 (program)


state 15

    2 exp: lvalue .
    3    | lvalue . ASSIGN exp
   36 lvalue: lvalue . DOT ID
   37       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 52
    DOT     shift, and go to state 53
    ASSIGN  shift, and go to state 54

    $default  reduce using rule 2 (exp)


state 16

   22 exp: funcall .

    $default  reduce using rule 22 (exp)


state 17

   34 exp: error SEMICOLON . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 55
    lvalue   go to state 15
    funcall  go to state 16


state 18

   41 funcall: ID LPAREN . RPAREN
   42        | ID LPAREN . paraseq RPAREN

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    RPAREN  shift, and go to state 56
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 57
    lvalue   go to state 15
    funcall  go to state 16
    paraseq  go to state 58


state 19

   23 exp: ID LBRACK . exp RBRACK OF exp
   38 lvalue: ID LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 59
    lvalue   go to state 15
    funcall  go to state 16


state 20

   24 exp: ID LBRACE . RBRACE
   25    | ID LBRACE . asseq RBRACE

    ID      shift, and go to state 60
    RBRACE  shift, and go to state 61

    asseq  go to state 62


state 21

   33 exp: LPAREN error . RPAREN
   34    | error . SEMICOLON exp

    SEMICOLON  shift, and go to state 17
    RPAREN     shift, and go to state 63


state 22

    7 exp: LPAREN RPAREN .

    $default  reduce using rule 7 (exp)


state 23

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   39 expseq: exp .
   40       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 64
    PLUS       shift, and go to state 40
    MINUS      shift, and go to state 41
    TIMES      shift, and go to state 42
    DIVIDE     shift, and go to state 43
    EQ         shift, and go to state 44
    NEQ        shift, and go to state 45
    LT         shift, and go to state 46
    LE         shift, and go to state 47
    GT         shift, and go to state 48
    GE         shift, and go to state 49
    AND        shift, and go to state 50
    OR         shift, and go to state 51

    $default  reduce using rule 39 (expseq)


state 24

    8 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 65


state 25

    9 exp: MINUS exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 9 (exp)


state 26

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   26    | IF exp . THEN exp
   27    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    THEN    shift, and go to state 66


state 27

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   28    | WHILE exp . DO exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    DO      shift, and go to state 67


state 28

   29 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 68


state 29

   66 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   67       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 69


state 30

   62 vardec: VAR . ID ASSIGN exp
   63       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 70


state 31

   54 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 71


state 32

   31 exp: LET decs . IN END
   32    | LET decs . IN expseq END

    IN  shift, and go to state 72


state 33

   47 decs: dec . decs

    FUNCTION  shift, and go to state 29
    VAR       shift, and go to state 30
    TYPE      shift, and go to state 31

    $default  reduce using rule 48 (decs)

    decs     go to state 73
    dec      go to state 33
    tydecs   go to state 34
    tydec    go to state 35
    vardec   go to state 36
    fundecs  go to state 37
    fundec   go to state 38


state 34

   49 dec: tydecs .

    $default  reduce using rule 49 (dec)


state 35

   52 tydecs: tydec .
   53       | tydec . tydecs

    TYPE  shift, and go to state 31

    TYPE      [reduce using rule 52 (tydecs)]
    $default  reduce using rule 52 (tydecs)

    tydecs  go to state 74
    tydec   go to state 35


state 36

   50 dec: vardec .

    $default  reduce using rule 50 (dec)


state 37

   51 dec: fundecs .

    $default  reduce using rule 51 (dec)


state 38

   64 fundecs: fundec .
   65        | fundec . fundecs

    FUNCTION  shift, and go to state 29

    FUNCTION  [reduce using rule 64 (fundecs)]
    $default  reduce using rule 64 (fundecs)

    fundecs  go to state 75
    fundec   go to state 38


state 39

    0 $accept: program $end .

    $default  accept


state 40

   10 exp: exp PLUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 76
    lvalue   go to state 15
    funcall  go to state 16


state 41

   11 exp: exp MINUS . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 77
    lvalue   go to state 15
    funcall  go to state 16


state 42

   12 exp: exp TIMES . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 78
    lvalue   go to state 15
    funcall  go to state 16


state 43

   13 exp: exp DIVIDE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 79
    lvalue   go to state 15
    funcall  go to state 16


state 44

   14 exp: exp EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 80
    lvalue   go to state 15
    funcall  go to state 16


state 45

   15 exp: exp NEQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 81
    lvalue   go to state 15
    funcall  go to state 16


state 46

   16 exp: exp LT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 82
    lvalue   go to state 15
    funcall  go to state 16


state 47

   17 exp: exp LE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 83
    lvalue   go to state 15
    funcall  go to state 16


state 48

   18 exp: exp GT . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 84
    lvalue   go to state 15
    funcall  go to state 16


state 49

   19 exp: exp GE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 85
    lvalue   go to state 15
    funcall  go to state 16


state 50

   20 exp: exp AND . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 86
    lvalue   go to state 15
    funcall  go to state 16


state 51

   21 exp: exp OR . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 87
    lvalue   go to state 15
    funcall  go to state 16


state 52

   37 lvalue: lvalue LBRACK . exp RBRACK

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 88
    lvalue   go to state 15
    funcall  go to state 16


state 53

   36 lvalue: lvalue DOT . ID

    ID  shift, and go to state 89


state 54

    3 exp: lvalue ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 90
    lvalue   go to state 15
    funcall  go to state 16


state 55

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   34    | error SEMICOLON exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 34 (exp)


state 56

   41 funcall: ID LPAREN RPAREN .

    $default  reduce using rule 41 (funcall)


state 57

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   43 paraseq: exp .
   44        | exp . COMMA paraseq

    COMMA   shift, and go to state 91
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 43 (paraseq)


state 58

   42 funcall: ID LPAREN paraseq . RPAREN

    RPAREN  shift, and go to state 92


state 59

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   23    | ID LBRACK exp . RBRACK OF exp
   38 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 93
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51


state 60

   45 asseq: ID . EQ exp
   46      | ID . EQ exp COMMA asseq

    EQ  shift, and go to state 94


state 61

   24 exp: ID LBRACE RBRACE .

    $default  reduce using rule 24 (exp)


state 62

   25 exp: ID LBRACE asseq . RBRACE

    RBRACE  shift, and go to state 95


state 63

   33 exp: LPAREN error RPAREN .

    $default  reduce using rule 33 (exp)


state 64

   40 expseq: exp SEMICOLON . expseq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 23
    lvalue   go to state 15
    expseq   go to state 96
    funcall  go to state 16


state 65

    8 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 8 (exp)


state 66

   26 exp: IF exp THEN . exp
   27    | IF exp THEN . exp ELSE exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 97
    lvalue   go to state 15
    funcall  go to state 16


state 67

   28 exp: WHILE exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 98
    lvalue   go to state 15
    funcall  go to state 16


state 68

   29 exp: FOR ID ASSIGN . exp TO exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 99
    lvalue   go to state 15
    funcall  go to state 16


state 69

   66 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   67       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 100


state 70

   62 vardec: VAR ID . ASSIGN exp
   63       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 101
    ASSIGN  shift, and go to state 102


state 71

   54 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 103


state 72

   31 exp: LET decs IN . END
   32    | LET decs IN . expseq END

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    END     shift, and go to state 104
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 23
    lvalue   go to state 15
    expseq   go to state 105
    funcall  go to state 16


state 73

   47 decs: dec decs .

    $default  reduce using rule 47 (decs)


state 74

   53 tydecs: tydec tydecs .

    $default  reduce using rule 53 (tydecs)


state 75

   65 fundecs: fundec fundecs .

    $default  reduce using rule 65 (fundecs)


state 76

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    $default  reduce using rule 10 (exp)


state 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    $default  reduce using rule 11 (exp)


state 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 12 (exp)


state 79

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 13 (exp)


state 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


state 81

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   15    | exp NEQ exp .
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


state 82

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   16    | exp LT exp .
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


state 83

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   17    | exp LE exp .
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


state 84

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   18    | exp GT exp .
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


state 85

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


state 86

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   20    | exp AND exp .
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49

    $default  reduce using rule 20 (exp)


state 87

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   21    | exp OR exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50

    $default  reduce using rule 21 (exp)


state 88

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   37 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 106
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51


state 89

   36 lvalue: lvalue DOT ID .

    $default  reduce using rule 36 (lvalue)


state 90

    3 exp: lvalue ASSIGN exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 3 (exp)


state 91

   44 paraseq: exp COMMA . paraseq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 57
    lvalue   go to state 15
    funcall  go to state 16
    paraseq  go to state 107


state 92

   42 funcall: ID LPAREN paraseq RPAREN .

    $default  reduce using rule 42 (funcall)


state 93

   23 exp: ID LBRACK exp RBRACK . OF exp
   38 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 108

    $default  reduce using rule 38 (lvalue)


state 94

   45 asseq: ID EQ . exp
   46      | ID EQ . exp COMMA asseq

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 109
    lvalue   go to state 15
    funcall  go to state 16


state 95

   25 exp: ID LBRACE asseq RBRACE .

    $default  reduce using rule 25 (exp)


state 96

   40 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 40 (expseq)


state 97

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   26    | IF exp THEN exp .
   27    | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    ELSE    shift, and go to state 110

    $default  reduce using rule 26 (exp)


state 98

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   28    | WHILE exp DO exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 28 (exp)


state 99

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   29    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    TO      shift, and go to state 111


state 100

   66 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   67       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 112

    $default  reduce using rule 59 (tyfields)

    tyfields  go to state 113
    tyfield   go to state 114


state 101

   63 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 115


state 102

   62 vardec: VAR ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 116
    lvalue   go to state 15
    funcall  go to state 16


state 103

   54 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 117
    LBRACE  shift, and go to state 118
    ARRAY   shift, and go to state 119

    ty  go to state 120


state 104

   31 exp: LET decs IN END .

    $default  reduce using rule 31 (exp)


state 105

   32 exp: LET decs IN expseq . END

    END  shift, and go to state 121


state 106

   37 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 37 (lvalue)


state 107

   44 paraseq: exp COMMA paraseq .

    $default  reduce using rule 44 (paraseq)


state 108

   23 exp: ID LBRACK exp RBRACK OF . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 122
    lvalue   go to state 15
    funcall  go to state 16


state 109

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   45 asseq: ID EQ exp .
   46      | ID EQ exp . COMMA asseq

    COMMA   shift, and go to state 123
    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 45 (asseq)


state 110

   27 exp: IF exp THEN exp ELSE . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 124
    lvalue   go to state 15
    funcall  go to state 16


state 111

   29 exp: FOR ID ASSIGN exp TO . exp DO exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 125
    lvalue   go to state 15
    funcall  go to state 16


state 112

   60 tyfield: ID . COLON ID
   61        | ID . COLON ID COMMA tyfield

    COLON  shift, and go to state 126


state 113

   66 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   67       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 127


state 114

   58 tyfields: tyfield .

    $default  reduce using rule 58 (tyfields)


state 115

   63 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 128


state 116

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   62 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 62 (vardec)


state 117

   55 ty: ID .

    $default  reduce using rule 55 (ty)


state 118

   56 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 112

    $default  reduce using rule 59 (tyfields)

    tyfields  go to state 129
    tyfield   go to state 114


state 119

   57 ty: ARRAY . OF ID

    OF  shift, and go to state 130


state 120

   54 tydec: TYPE ID EQ ty .

    $default  reduce using rule 54 (tydec)


state 121

   32 exp: LET decs IN expseq END .

    $default  reduce using rule 32 (exp)


state 122

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   23    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 23 (exp)


state 123

   46 asseq: ID EQ exp COMMA . asseq

    ID  shift, and go to state 60

    asseq  go to state 131


state 124

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 27 (exp)


state 125

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51
    DO      shift, and go to state 132


state 126

   60 tyfield: ID COLON . ID
   61        | ID COLON . ID COMMA tyfield

    ID  shift, and go to state 133


state 127

   66 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   67       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 134
    EQ     shift, and go to state 135


state 128

   63 vardec: VAR ID COLON ID ASSIGN . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 136
    lvalue   go to state 15
    funcall  go to state 16


state 129

   56 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


state 130

   57 ty: ARRAY OF . ID

    ID  shift, and go to state 138


state 131

   46 asseq: ID EQ exp COMMA asseq .

    $default  reduce using rule 46 (asseq)


state 132

   29 exp: FOR ID ASSIGN exp TO exp DO . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 139
    lvalue   go to state 15
    funcall  go to state 16


state 133

   60 tyfield: ID COLON ID .
   61        | ID COLON ID . COMMA tyfield

    COMMA  shift, and go to state 140

    $default  reduce using rule 60 (tyfield)


state 134

   67 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 141


state 135

   66 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 142
    lvalue   go to state 15
    funcall  go to state 16


state 136

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   63 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 63 (vardec)


state 137

   56 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 56 (ty)


state 138

   57 ty: ARRAY OF ID .

    $default  reduce using rule 57 (ty)


state 139

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 29 (exp)


state 140

   61 tyfield: ID COLON ID COMMA . tyfield

    ID  shift, and go to state 112

    tyfield  go to state 143


state 141

   67 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 144


state 142

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   66 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 66 (fundec)


state 143

   61 tyfield: ID COLON ID COMMA tyfield .

    $default  reduce using rule 61 (tyfield)


state 144

   67 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    error   shift, and go to state 1
    ID      shift, and go to state 2
    STRING  shift, and go to state 3
    INT     shift, and go to state 4
    LPAREN  shift, and go to state 5
    MINUS   shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp      go to state 145
    lvalue   go to state 15
    funcall  go to state 16


state 145

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   67 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 40
    MINUS   shift, and go to state 41
    TIMES   shift, and go to state 42
    DIVIDE  shift, and go to state 43
    EQ      shift, and go to state 44
    NEQ     shift, and go to state 45
    LT      shift, and go to state 46
    LE      shift, and go to state 47
    GT      shift, and go to state 48
    GE      shift, and go to state 49
    AND     shift, and go to state 50
    OR      shift, and go to state 51

    $default  reduce using rule 67 (fundec)
